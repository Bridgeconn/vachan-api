version: '3.9'
services:
 kratos:
  image: oryd/kratos:v0.7.0-alpha.1
  ports:
    - '4433:4433' # public
    - '4434:4434' # admin
  restart: unless-stopped
  environment:
    - DSN=${VACHAN_AUTH_DATABASE}
    - LOG_LEVEL=trace
    - COURIER_SMTP_CONNECTION_URI=${VACHAN_SUPPORT_EMAIL_CREDS}
    - COURIER_SMTP_FROM_ADDRESS=${VACHAN_SUPPORT_EMAIL}
    - SERVE_PUBLIC_BASE_URL=http://${VACHAN_DOMAIN:-kratos}:4433
  command: serve -c /etc/config/kratos/kratos.yml --watch-courier
  volumes:
    # - type: volume
    #   source: kratos-sqlite
    #   target: /var/lib/sqlite
    #   read_only: false
    - type: bind
      source: ./Kratos_config/email-password
      target: /etc/config/kratos
  expose:
    - 4434
    - 4433
  networks:
    - my-network

 vachan-db:
  image: postgres:12.7
  healthcheck:
   test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "postgres" ]
   timeout: 45s
   interval: 10s
   retries: 10
  restart: always
  environment: 
   - POSTGRES_USER=${VACHAN_POSTGRES_USER:-postgres}
   - POSTGRES_PASSWORD=${VACHAN_POSTGRES_PASSWORD:-password}
   - POSTGRES_DB=${VACHAN_POSTGRES_DATABASE:-vachan_dev}
   - POSTGRES_HOST_AUTH_METHOD=trust
  logging:
   options:
    max-size: 10m
    max-file: "3"
  expose:
   - 5432
  ports:
   # HOST:CONTAINER
   - "5434:5432"
  networks:
   - my-network
  volumes: 
   # - ${VACHAN_POSTGRES_DATA_DIR:-./pgdata}:/var/lib/postgresql/data
   - vachan-db-vol:/var/lib/postgresql/data
   - ../db/csvs:/csvs
   - ../db/seed_DB.sql:/docker-entrypoint-initdb.d/seed_DB.sql

# vachan-api app
 vachan-api:
  build:
   context: ../
   dockerfile: ./docker/Dockerfile
  healthcheck:
   timeout: 45s
   interval: 10s
   retries: 10
  environment: 
   - VACHAN_POSTGRES_HOST=vachan-db
   - VACHAN_POSTGRES_USER=${VACHAN_POSTGRES_USER:-postgres}
   - VACHAN_POSTGRES_PASSWORD=${VACHAN_POSTGRES_PASSWORD:-password}
   - VACHAN_POSTGRES_DATABASE=${VACHAN_POSTGRES_DATABASE:-vachan_dev}
   - VACHAN_POSTGRES_PORT=5432
   - VACHAN_KRATOS_PUBLIC_URL=${VACHAN_KRATOS_PUBLIC_URL:-http://kratos:4433/}
   - VACHAN_KRATOS_ADMIN_URL=http://kratos:4434/
   - VACHAN_SUPER_USERNAME=${VACHAN_SUPER_USERNAME}
   - VACHAN_SUPER_PASSWORD=${VACHAN_SUPER_PASSWORD}
   - VACHAN_TEST_MODE="False"
   - VACHAN_LOGGING_LEVEL=INFO
  command: uvicorn main:app --host 0.0.0.0 --port 8000
  volumes:
   # - ./app:/app/app
   - logs-vol:/app/logs
  restart: always
  links:
   - vachan-db
   # - kratos
  expose:
   - 8000
  networks:
   - my-network

# Web Server
 web-server:
  image: nginx:1.15-alpine
  environment:
   - domain=${VACHAN_DOMAIN:-localhost}
  ports:
   - 80:80
   - 443:443
  depends_on:
   - vachan-api
  healthcheck:
   timeout: 45s
   interval: 10s
   retries: 10
  volumes:
    - ./nginx/prod:/etc/nginx/conf.d
    - ./nginx/prod/certbot/conf:/etc/letsencrypt
    - ./nginx/prod/certbot/www:/var/www/certbot
    - logs-vol:/var/log/nginx
  networks:
   - my-network

 # for SSL
 certbot:
  image: certbot/certbot
  volumes:
    - ./nginx/prod/certbot/conf:/etc/letsencrypt
    - ./nginx/prod/certbot/www:/var/www/certbot
  entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"


networks:
 my-network:              
volumes:
  vachan-db-vol:
  logs-vol:
  # kratos-sqlite:
